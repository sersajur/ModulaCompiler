Lexical analyze:
1:1	module	module
1:7	id	Main
1:12	semicolom	;
1:13	var	var
2:4	id	a
3:3	comma	,
3:4	id	b
3:6	colom	:
3:7	real	real
3:12	semicolom	;
3:13	id	arrv
4:6	comma	,
4:7	id	as
4:10	colom	:
4:11	array	array
4:17	intval	1
4:19	colom	:
4:20	intval	15
4:22	comma	,
4:23	intval	1
4:24	colom	:
4:25	intval	20
4:27	comma	,
4:28	intval	1
4:29	colom	:
4:30	intval	4
4:31	of	of
4:34	real	real
4:39	semicolom	;
4:40	begin	begin
5:5	id	a
6:3	ass	:=
6:5	intval	3
6:6	end	end
7:3	id	Main
7:8	dot	.
7:9	eof	
Syntax analyze:
1: <program>::=<module> dot 
	2: <module>::=<moduleheading> <block> id 
		3: <moduleheading>::=module id semicolom 
		5: <block>::=<declarationparts> <fctdeclarationparts> 
			9: <declarationparts>::=<declarationpart> <fctdeclarationpart> 
				13: <declarationpart>::=var <fctvariabledeclarations> 
					17: <fctvariabledeclarations>::=<variabledeclarations> 
						22: <variabledeclarations>::=<variabledeclaration> semicolom <fctvariabledeclaration> 
							50: <variabledeclaration>::=<identlist> colom <type> 
								42: <identlist>::=id <fctidentlist> 
									44: <fctidentlist>::=comma <identlist> 
										42: <identlist>::=id <fctidentlist> 
											43: <fctidentlist>::=Lambda
								36: <type>::=<basetype> 
									40: <basetype>::=real 
							23: <fctvariabledeclaration>::=<variabledeclarations> 
								22: <variabledeclarations>::=<variabledeclaration> semicolom <fctvariabledeclaration> 
									50: <variabledeclaration>::=<identlist> colom <type> 
										42: <identlist>::=id <fctidentlist> 
											44: <fctidentlist>::=comma <identlist> 
												42: <identlist>::=id <fctidentlist> 
													43: <fctidentlist>::=Lambda
										37: <type>::=<arraystructure> 
											45: <arraystructure>::=array <indexrangelist> of <basetype> 
												46: <indexrangelist>::=<indexrange> <fctindexrange> 
													49: <indexrange>::=intval colom intval 
													47: <fctindexrange>::=comma <indexrangelist> 
														46: <indexrangelist>::=<indexrange> <fctindexrange> 
															49: <indexrange>::=intval colom intval 
															47: <fctindexrange>::=comma <indexrangelist> 
																46: <indexrangelist>::=<indexrange> <fctindexrange> 
																	49: <indexrange>::=intval colom intval 
																	48: <fctindexrange>::=Lambda
												40: <basetype>::=real 
									24: <fctvariabledeclaration>::=Lambda
				11: <fctdeclarationpart>::=Lambda
			8: <fctdeclarationparts>::=<statementpart> end 
				25: <statementpart>::=begin <statementsequence> 
					71: <statementsequence>::=<statement> <fctstatement> 
						74: <statement>::=<assignment> 
							78: <assignment>::=<variable> ass <expression> 
								79: <variable>::=id <fctvar> 
									81: <fctvar>::=Lambda
								85: <expression>::=<SimpleExpression> <fctsimpleexpression> 
									89: <SimpleExpression>::=<term> <fcttermadd> 
										96: <term>::=<factor> <fcttermmul> 
											100: <factor>::=<unsignedconstant> 
												30: <unsignedconstant>::=<number> 
													34: <number>::=intval 
											98: <fcttermmul>::=Lambda
										92: <fcttermadd>::=Lambda
									87: <fctsimpleexpression>::=Lambda
						73: <fctstatement>::=Lambda
Semantic analyze:
Block	IdName	Attributes	
	Main:	Module
Main	a:	Variable
Main	arrv:	Array
Main	as:	Array
Main	b:	Variable
Code generation:
This is code stub for byte-code printing
